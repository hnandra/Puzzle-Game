/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import city.cs.engine.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * The main menu.
 * 
 * @author h_nan
 */
public class MainMenu extends javax.swing.JFrame {
    private static String playerName;

    private static SoundClip sound;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        startPanel = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        instructionsButton = new javax.swing.JButton();
        highscoresButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        startBg = new javax.swing.JLabel();
        instructionsPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        instructionsBg = new javax.swing.JLabel();
        highscoresPanel = new javax.swing.JPanel();
        backButtonHs = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        highscoreTable = new javax.swing.JTable();
        highscoreBg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(480, 480));

        mainPanel.setLayout(new java.awt.CardLayout());

        startPanel.setLayout(null);

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        startPanel.add(nameField);
        nameField.setBounds(110, 10, 70, 30);

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setText("Player name: ");
        startPanel.add(nameLabel);
        nameLabel.setBounds(10, 10, 100, 30);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        startPanel.add(saveButton);
        saveButton.setBounds(190, 10, 60, 30);

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        startPanel.add(startButton);
        startButton.setBounds(200, 150, 70, 30);

        instructionsButton.setText("Instructions");
        instructionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionsButtonActionPerformed(evt);
            }
        });
        startPanel.add(instructionsButton);
        instructionsButton.setBounds(180, 210, 110, 30);

        highscoresButton.setText("High Scores");
        highscoresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highscoresButtonActionPerformed(evt);
            }
        });
        startPanel.add(highscoresButton);
        highscoresButton.setBounds(180, 270, 110, 30);

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        startPanel.add(quitButton);
        quitButton.setBounds(200, 330, 70, 30);

        startBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/images/startBg.png"))); // NOI18N
        startPanel.add(startBg);
        startBg.setBounds(0, 0, 480, 480);

        mainPanel.add(startPanel, "card1");

        instructionsPanel.setLayout(null);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        instructionsPanel.add(backButton);
        backButton.setBounds(200, 440, 80, 30);

        instructionsBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/images/instructionsBg.png"))); // NOI18N
        instructionsBg.setText("jLabel1");
        instructionsPanel.add(instructionsBg);
        instructionsBg.setBounds(0, 0, 480, 480);

        mainPanel.add(instructionsPanel, "card3");

        highscoresPanel.setLayout(null);

        backButtonHs.setText("Back");
        backButtonHs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonHsActionPerformed(evt);
            }
        });
        highscoresPanel.add(backButtonHs);
        backButtonHs.setBounds(200, 440, 90, 30);

        highscoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Player name", "Time Taken"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(highscoreTable);
        if (highscoreTable.getColumnModel().getColumnCount() > 0) {
            highscoreTable.getColumnModel().getColumn(0).setResizable(false);
            highscoreTable.getColumnModel().getColumn(1).setResizable(false);
        }

        highscoresPanel.add(jScrollPane1);
        jScrollPane1.setBounds(140, 110, 210, 320);

        highscoreBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/images/highscoresBg.png"))); // NOI18N
        highscoreBg.setText("jLabel1");
        highscoresPanel.add(highscoreBg);
        highscoreBg.setBounds(0, 0, 480, 480);

        mainPanel.add(highscoresPanel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        if (playerName == null || "".equals(nameField.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter your name.");
        } else {
            sound.stop();
            Game game = new Game();
            dispose();
        }

    }//GEN-LAST:event_startButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void instructionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionsButtonActionPerformed
        mainPanel.removeAll();
        mainPanel.add(instructionsPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_instructionsButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        mainPanel.removeAll();
        mainPanel.add(startPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_backButtonActionPerformed

    private void highscoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highscoresButtonActionPerformed
        mainPanel.removeAll();
        mainPanel.add(highscoresPanel);
        mainPanel.repaint();
        mainPanel.revalidate();

        Path path = Paths.get("src\\Main\\highscores.txt");
        try {
            Files.createFile(path);
            System.out.println("File created.");
        } catch (IOException e) {
            System.out.println("File already exists.");
        }
        try {
            File file = new File("src\\Main\\highscores.txt");
            FileReader fr = new FileReader(file.getAbsoluteFile());
            try (BufferedReader br = new BufferedReader(fr)) {
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();
                while (line != null) {
                    sb.append(line);
                    sb.append(System.lineSeparator());
                    line = br.readLine();
                }
                fr.close();
                br.close();
                String[] lineArray = sb.toString().split(";");
                
                int rowsNeeded = lineArray.length;

                for (int row = 0; row < rowsNeeded - 1; row += 2) {
                    highscoreTable.setValueAt(lineArray[row], row, 0); //player names
                    highscoreTable.setValueAt(lineArray[row + 1], row, 1); //scores
                }
            }

        } catch (IOException e) {
            System.out.println("Error reading from file.");
        }

        TableRowSorter<TableModel> sorter = new TableRowSorter<>(highscoreTable.getModel());
        highscoreTable.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>(10);
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
    }//GEN-LAST:event_highscoresButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (nameField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your name.");
        } else {
            playerName = nameField.getText();
            JOptionPane.showMessageDialog(this, "Hi, " + playerName + ".");
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void backButtonHsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonHsActionPerformed
        mainPanel.removeAll();
        mainPanel.add(startPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_backButtonHsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainMenu mainMenu = new MainMenu();
                mainMenu.setVisible(true);
                mainMenu.setTitle("Puzzle Game");
                try {
                    
                    sound = new SoundClip("src\\main\\sounds\\mainmenu.wav");
                    sound.play();
                    sound.setVolume(0.3);
                    sound.loop();
                } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
                    System.out.println(e);
                }
            }
        });
    }

    public static String getPlayerName() {
        return playerName;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton backButtonHs;
    private javax.swing.JLabel highscoreBg;
    private javax.swing.JTable highscoreTable;
    private javax.swing.JButton highscoresButton;
    private javax.swing.JPanel highscoresPanel;
    private javax.swing.JLabel instructionsBg;
    private javax.swing.JButton instructionsButton;
    private javax.swing.JPanel instructionsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel startBg;
    private javax.swing.JButton startButton;
    private javax.swing.JPanel startPanel;
    // End of variables declaration//GEN-END:variables
}
